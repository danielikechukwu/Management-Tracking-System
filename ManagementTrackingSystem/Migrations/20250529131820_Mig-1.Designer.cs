// <auto-generated />
using System;
using ManagementTrackingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementTrackingSystem.Migrations
{
    [DbContext(typeof(ManagementTrackingSystemDBContext))]
    [Migration("20250529131820_Mig-1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManagementTrackingSystem.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Jajpur",
                            CustomerId = 1,
                            Street = "123 Main St",
                            ZipCode = "755019"
                        },
                        new
                        {
                            Id = 2,
                            City = "Cuttack",
                            CustomerId = 2,
                            Street = "456 Main St",
                            ZipCode = "755123"
                        },
                        new
                        {
                            Id = 3,
                            City = "BBSR",
                            CustomerId = 1,
                            Street = "789 Main St",
                            ZipCode = "755456"
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic Products Description",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Accessories Products Description",
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MembershipTierId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembershipTierId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1985, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pranayarout@example.com",
                            FirstName = "Pranaya",
                            IsActive = true,
                            LastName = "Rout",
                            MembershipTierId = 1,
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1988, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hinasharma@example.com",
                            FirstName = "Hina",
                            IsActive = true,
                            LastName = "Sharma",
                            MembershipTierId = 2,
                            PhoneNumber = "234567"
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.MembershipTier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("TierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MembershipTiers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountPercentage = 15.0m,
                            TierName = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            DiscountPercentage = 10.0m,
                            TierName = "Silver"
                        },
                        new
                        {
                            Id = 3,
                            DiscountPercentage = 5.0m,
                            TierName = "Bronze"
                        },
                        new
                        {
                            Id = 4,
                            DiscountPercentage = 0.0m,
                            TierName = "Standard"
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShippingAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1397.50m,
                            CustomerId = 1,
                            DeliveryCharge = 0m,
                            OrderDate = new DateTime(2025, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDiscount = 209.63m,
                            ShippingAddressId = 1,
                            Status = "Processing",
                            TotalAmount = 1187.87m
                        },
                        new
                        {
                            Id = 2,
                            Amount = 900m,
                            CustomerId = 1,
                            DeliveryCharge = 50.0m,
                            OrderDate = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDiscount = 135m,
                            ShippingAddressId = 1,
                            Status = "Processing",
                            TotalAmount = 815.0m
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Discount = 150m,
                            OrderId = 1,
                            ProductId = 1,
                            ProductPrice = 1500m,
                            Quantity = 1,
                            TotalPrice = 1350m
                        },
                        new
                        {
                            Id = 2,
                            Discount = 2.50m,
                            OrderId = 1,
                            ProductId = 2,
                            ProductPrice = 25m,
                            Quantity = 2,
                            TotalPrice = 47.50m
                        },
                        new
                        {
                            Id = 3,
                            Discount = 12.5m,
                            OrderId = 2,
                            ProductId = 2,
                            ProductPrice = 25m,
                            Quantity = 10,
                            TotalPrice = 237.5m
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "High-performance laptop",
                            DiscountPercentage = 10m,
                            Name = "Laptop",
                            Price = 1500m,
                            SKU = "LPT-100",
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Wireless mouse",
                            DiscountPercentage = 5m,
                            Name = "Mouse",
                            Price = 25m,
                            SKU = "MSE-200",
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Mechanical keyboard",
                            DiscountPercentage = 15m,
                            Name = "Keyboard",
                            Price = 50m,
                            SKU = "KBD-300",
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "iPhone 15 pro",
                            DiscountPercentage = 0m,
                            Name = "Mobile",
                            Price = 2550m,
                            SKU = "MOB-123",
                            StockQuantity = 100
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.TrackingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Carrier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("TrackingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carrier = "FedEx",
                            EstimatedDeliveryDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1,
                            TrackingNumber = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Carrier = "FedEx",
                            EstimatedDeliveryDate = new DateTime(1988, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2,
                            TrackingNumber = "123789456"
                        });
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Address", b =>
                {
                    b.HasOne("ManagementTrackingSystem.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Customer", b =>
                {
                    b.HasOne("ManagementTrackingSystem.Models.MembershipTier", "MembershipTier")
                        .WithMany()
                        .HasForeignKey("MembershipTierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipTier");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Order", b =>
                {
                    b.HasOne("ManagementTrackingSystem.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementTrackingSystem.Models.Address", "ShippingAddres")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId");

                    b.Navigation("Customer");

                    b.Navigation("ShippingAddres");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.OrderItem", b =>
                {
                    b.HasOne("ManagementTrackingSystem.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementTrackingSystem.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Product", b =>
                {
                    b.HasOne("ManagementTrackingSystem.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.TrackingDetail", b =>
                {
                    b.HasOne("ManagementTrackingSystem.Models.Order", "Order")
                        .WithOne("TrackingDetail")
                        .HasForeignKey("ManagementTrackingSystem.Models.TrackingDetail", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ManagementTrackingSystem.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("TrackingDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
